// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© LvNThL

//@version=5
indicator("Triple RSI", overlay = false)

bool _rsiswitch = input.bool(true, "RSI Active?", group = "Switches")
bool _maswitch = input.bool(false, "MA Active?", group = "Switches")
bool _colorfill = input.bool(false, "Color Fill?", group = "Switches")
bool _darkmode = input.bool(false, "DarkMode?", group = "Switches")

ma_1(source1, length1, type) =>
    switch type
        "SMA" => ta.sma(source1, length1)
        "EMA" => ta.ema(source1, length1)
        "SMMA (RMA)" => ta.rma(source1, length1)
        "WMA" => ta.wma(source1, length1)
        "VWMA" => ta.vwma(source1, length1)

//RSI1
rsiLengthInput1 = input.int(5, title = "RSI: Length 1", minval = 1, maxval = 4999, step = 1)
rsiSourceInput1 = close

up1 = ta.rma(math.max(ta.change(rsiSourceInput1), 0), rsiLengthInput1)
down1 = ta.rma(-math.min(ta.change(rsiSourceInput1), 0), rsiLengthInput1)
rsi1 = down1 == 0 ? 100 : up1 == 0 ? 0 : 100 - (100 / (1 + up1 / down1))

//RSI2
rsiLengthInput2 = input.int(8, title = "RSI: Length 2", minval = 1, maxval = 4999, step = 1)
rsiSourceInput2 = close

up2 = ta.rma(math.max(ta.change(rsiSourceInput2), 0), rsiLengthInput2)
down2 = ta.rma(-math.min(ta.change(rsiSourceInput2), 0), rsiLengthInput2)
rsi2 = down2 == 0 ? 100 : up2 == 0 ? 0 : 100 - (100 / (1 + up2 / down2))

//RSI3
rsiLengthInput3 = input.int(13, title = "RSI: Length 3", minval = 1, maxval = 4999, step = 1)
rsiSourceInput3 = close

up3 = ta.rma(math.max(ta.change(rsiSourceInput3), 0), rsiLengthInput3)
down3 = ta.rma(-math.min(ta.change(rsiSourceInput3), 0), rsiLengthInput3)
rsi3 = down3 == 0 ? 100 : up3 == 0 ? 0 : 100 - (100 / (1 + up3 / down3))

//HLINES
topcol1 = color.new(#b22222,75)
botcol1 = color.new(#b22222,100)

topcol2 = color.new(#3ac32b,75)
botcol2 = color.new(#3ac32b,100)

topval1 = 100
midval1 = 75

midval2 = 25
botval2 = 0

_rsitopband = hline(100, "RSI Top Band", _darkmode ? color.rgb(255,255,255,0) : color.rgb(0,0,0,0), linestyle = hline.style_solid)
_rsimid1band = hline(75, "RSI Middle 1 Band", _darkmode ? color.rgb(255,255,255,75) : color.rgb(0,0,0,75))
_rsimid2band = hline(50, "RSI Middle 2 Band", _darkmode ? color.rgb(255,255,255,75) : color.rgb(0,0,0,75), linestyle = hline.style_solid)
_rsimid3band = hline(25, "RSI Middle 3 Band", _darkmode ? color.rgb(255,255,255,75) : color.rgb(0,0,0,75))
_rsibottomband = hline(0, "RSI Bottom Band", _darkmode ? color.rgb(255,255,255,0) : color.rgb(0,0,0,0), linestyle = hline.style_solid)

//MA
string typeMA2 = input.string("SMA", "Moving Average Type", ["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group = "MA Type Settings")
int sma1input = input.int(55, "Moving Average Length", minval = 1, maxval = 4999, step = 1)
float sma1 = ma_1(math.avg(rsi1, rsi2, rsi3), sma1input, typeMA2)

//PLOTS
plot(_rsiswitch ? rsi1 : na, "RSI: #1", style = plot.style_line, color = _darkmode ? color.rgb(255,255,255,25) : color.rgb(0,0,0,25), linewidth = 1)
plot(_rsiswitch ? rsi2 : na, "RSI: #2", style = plot.style_line, color = _darkmode ? color.rgb(255,255,255,50) : color.rgb(0,0,0,50), linewidth = 1)
plot(_rsiswitch ? rsi3 : na, "RSI: #3", style = plot.style_line, color = _darkmode ? color.rgb(255,255,255,75) : color.rgb(0,0,0,75), linewidth = 1)
plot(_maswitch  ? sma1 : na, title = "Triple RSI: Moving Average", style = plot.style_line, color = rsi1 > sma1 and rsi2 > sma1 and rsi3 > sma1 and sma1 > 50 ? color.new(#0020ff,0) : color.new(#b22222,0), linewidth = 2)

fill(_rsitopband, _rsimid1band, topval1, midval1, topcol1, botcol1, display = _colorfill ? display.all : display.none)
fill(_rsimid3band, _rsibottomband, midval2, botval2, botcol2, topcol2, display = _colorfill ? display.all : display.none)
